import platformio

import glob
import os
import sys

Import("env")
try:
    import numpy as np
    from PIL import Image
except ImportError:
    env.Execute(
        env.VerboseAction(
            '$PYTHONEXE -m pip install "Pillow" "numpy"',
            "Installing ESP-IDF's Python dependencies",
        )
    )
    import numpy as np
    from PIL import Image


files = glob.glob("./images/*.png")

size = 0
outstr = ""
for fname in files:
    print(f"Adding {fname}")
    img = np.array(Image.open(fname))
    bool_arr: np.ndarray = img[:, :, 0] == 0
    bool_arr.flatten()
    int_arr = np.packbits(bool_arr)
    size += int_arr.size
    variable_name = os.path.splitext(os.path.basename(fname))[0]
    outstr += f"static const PROGMEM uint8_t {variable_name}[] =\n{{"
    for i, val in enumerate(int_arr):
        if i % (img.shape[1] / 8) == 0:
            outstr += "\n  "
        outstr += f"0x{val:X}, "
    if outstr[-3:] == "\n  ":
        outstr = outstr[:-3]
    outstr += "\n};\n\n"
outstr = \
f"""// Autogenerated.  Takes {size:,} bytes of flash.
#ifndef _IMAGES_H
#define _IMAGES_H
#include <avr/pgmspace.h>

""" + outstr + "\n#endif"

with open(os.path.realpath("./include/images.h"), "w") as f:
    f.write(outstr)